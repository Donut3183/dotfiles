set sixel true
set previewer ~/.config/lf/previewer.sh

# interpreter for shell commands
set shell sh
set shellopts '-eu'

set ifs "\n"
set hidden false
set ignorecase true
set icons true
set drawbox true

cmd mkdir ${{printf "Directory Name: "
  read and
  mkdir $and
}}

cmd mkfile ${{
  printf "File Name: "
  read and
  $EDITOR $and
}}

# leave some space at the top and the bottom of the screen
set scrolloff 10

# Use the `dim` attribute instead of underline for the cursor in the preview pane
set cursorpreviewfmt "\033[7;2m"

# show the result of execution of previous commands
map ` !true

# execute current file (must be executable)
map x $$f
map X !$f

# dedicated keys for file opener actions
map o &mimeopen $f
map O $mimeopen --ask $f

# define a custom 'open' command
cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        "application/x-stl"|"model/stl"|"application/octet-stream")
          /usr/bin/prusa-slicer --single-instance "$fx" > /dev/null 2>&1 &
          ;;
        *) for f in $fx; do $OPENER "$f" > /dev/null 2> /dev/null & done;;
    esac
}}
# Function to check whether it is file or directory
cmd my_open &{{
    if [ -f "$fx" ]; then
        lf -remote "send $id open \"$fx\""
    elif [ -d "$fx" ]; then
        lf -remote "send $id cd \"$fx\""
    fi
}}

# Mark several files and move to directory
cmd move ${{ mv $fx $PWD }}

# mkdir command. See wiki if you want it to select created dir
map a :push %mkdir<space>

# move current file or selected files to trash folder
# cmd trash %set -f; mv $fx ~/.trash

# define a custom 'delete' command
cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read and
    [ "$and" = "y" ] && rm -rf $fx
}}

# use '<delete>' key for either 'trash' or 'delete' command

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}
# Custom mappings
map . set hidden!
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map R reload
map m
map mf mkfile
map md mkdir
map mv move
map C clear
map l my_open

map gu cd ~/Nextcloud/Universitet/Kurser/
map gel cd ~/Nextcloud/Universitet/Kurser/ELA410/
map gma cd ~/Nextcloud/Universitet/Kurser/MAA152/
map gpe cd ~/Nextcloud/Universitet/Kurser/DVA454/
map gec cd ~/embedded/

map gc cd ~/.config/
map gd cd ~/Downloads/
map glf !nvim ~/.config/lf/lfrc
map g3 cd ~/Nextcloud/Documents/3D-printing/
